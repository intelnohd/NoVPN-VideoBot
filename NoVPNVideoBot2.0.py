import telebot
import os
import requests
import yt_dlp
from tikdan import Tikdan

# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "YOUR_TOKEN"
bot = telebot.TeleBot(TOKEN)

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä API Tikdan –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å TikTok
tiktok_api = Tikdan.Api()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "üì• –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (YouTube, TikTok, Instagram): ")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (–ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ YouTube, TikTok –∏ Instagram)
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    url = message.text.strip()
    
    if "youtube.com" in url or "youtu.be" in url:
        download_youtube_video(message, url)
    elif "tiktok.com" in url:
        download_tiktok_video(message, url)
    elif "instagram.com" in url:
        download_instagram_video(message, url)
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞!")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å YouTube
def download_youtube_video(message, url):
    try:
        bot.send_message(message.chat.id, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ —Å YouTube...")
        
        video_path = "youtube_video.mp4"
        ydl_opts = {
            'format': 'bestvideo+bestaudio/best',
            'outtmpl': video_path,
            'merge_output_format': 'mp4',
            'quiet': True
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([url])

        bot.send_video(message.chat.id, open(video_path, 'rb'))
        os.remove(video_path)  # –£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ YouTube: {e}")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å TikTok
def download_tiktok_video(message, url):
    try:
        video_info = tiktok_api.export_video_info(url)
        download_url = video_info['download_url']
        
        bot.send_message(message.chat.id, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ —Å TikTok...")

        video_path = "tiktok_video.mp4"
        download_video(download_url, video_path)

        bot.send_video(message.chat.id, open(video_path, 'rb'))
        os.remove(video_path)  # –£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ TikTok: {e}")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å Instagram
def download_instagram_video(message, url):
    try:
        bot.send_message(message.chat.id, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ —Å Instagram...")

        video_path = "instagram_video.mp4"
        ydl_opts = {'outtmpl': video_path, 'quiet': True}
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([url])

        bot.send_video(message.chat.id, open(video_path, 'rb'))
        os.remove(video_path)  # –£–¥–∞–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Instagram: {e}")

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ
def download_video(url, save_path):
    try:
        with requests.get(url, stream=True) as response:
            with open(save_path, "wb") as video_file:
                for chunk in response.iter_content(chunk_size=1024):
                    video_file.write(chunk)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    bot.polling(none_stop=True)
